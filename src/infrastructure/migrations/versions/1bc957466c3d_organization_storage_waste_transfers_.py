"""organization,  storage, waste_transfers, waste_types

Revision ID: 1bc957466c3d
Revises: 
Create Date: 2024-10-20 02:26:51.787947

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1bc957466c3d'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('organization',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('storage',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('biowaste', sa.INTEGER(), nullable=False),
    sa.Column('plastic', sa.INTEGER(), nullable=False),
    sa.Column('glass', sa.INTEGER(), nullable=False),
    sa.Column('biowaste_capacity', sa.INTEGER(), nullable=False),
    sa.Column('plastic_capacity', sa.INTEGER(), nullable=False),
    sa.Column('glass_capacity', sa.INTEGER(), nullable=False),
    sa.Column('biowaste_remaining', sa.INTEGER(), sa.Computed('GREATEST(biowaste_capacity - biowaste, 0)', ), nullable=False),
    sa.Column('plastic_remaining', sa.INTEGER(), sa.Computed('GREATEST(plastic_capacity - plastic, 0)', ), nullable=False),
    sa.Column('glass_remaining', sa.INTEGER(), sa.Computed('GREATEST(glass_capacity - glass, 0)', ), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('waste_type',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('waste_transfers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('organization_id', sa.UUID(), nullable=False),
    sa.Column('storage_id', sa.UUID(), nullable=False),
    sa.Column('waste_type_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.INTEGER(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['storage_id'], ['storage.id'], ),
    sa.ForeignKeyConstraint(['waste_type_id'], ['waste_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('waste_transfers')
    op.drop_table('waste_type')
    op.drop_table('storage')
    op.drop_table('organization')
    # ### end Alembic commands ###
